apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

ext {
    bintrayRepo = 'quadible'
    bintrayName = 'mvp'

    publishedGroupId = 'com.quadible'
    libraryName = 'mvp'
    artifact = 'mvp'

    libraryDescription = 'A simple implementation of mvp in android'

    siteUrl = 'https://github.com/St4B/mvp'
    gitUrl = 'https://github.com/St4B/mvp.git'

    libraryVersion = '1.0'

    developerId = 'St4B'
    developerName = 'Vaios Tsitsonis'
    developerEmail = 'v.tsitsonis@quadible.co.uk'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        consumerProguardFiles 'proguard-rules.pro'

        testInstrumentationRunner "com.quadible.mvp.MvpTestRunner"
    }


    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    compileOnly 'com.android.support:appcompat-v7:27.1.1'
    compileOnly 'com.google.code.gson:gson:2.8.5'

    api project(':mvp-annotation')
    
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.google.code.gson:gson:2.8.5'
    androidTestImplementation 'com.android.support:appcompat-v7:27.1.1'

    androidTestAnnotationProcessor project(path: ':mvp-processor')
}

//Apply at the end!
if (project.rootProject.file('local.properties').exists()) {
    apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
    apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'
}

publishing {
    publications {
        Production(MavenPublication) {
            artifact("$buildDir/outputs/aar/" + artifact + "-release.aar")
            groupId publishedGroupId
            artifactId artifact
            version libraryVersion

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included in the pom.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}